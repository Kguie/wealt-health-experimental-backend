# ---- Build Stage ----
FROM golang:1.24 AS builder

WORKDIR /app

# Activer le proxy Go pour éviter des problèmes de téléchargement
ENV GOPROXY=https://proxy.golang.org,direct

# Copier les fichiers nécessaires pour le build
COPY go.mod go.sum ./
RUN go mod download

# Copier tout le code source
COPY . .

# Compiler le binaire Go pour la production (sans air)
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o api ./*.go

# ---- Development Stage ----
FROM golang:1.24 AS dev

WORKDIR /app

# Installer les dépendances système pour le hot-reload
RUN apt-get update && apt-get install -y inotify-tools

# Installer air avec version précise
RUN go install github.com/cosmtrek/air@v1.49.0

# Créer le dossier tmp à l'avance
RUN mkdir -p /app/tmp

# Copier la config air AVANT le code
COPY .air.toml .
COPY . .

# Exécuter `air` pour le hot-reload en dev
CMD ["air", "-c", ".air.toml"]

# ---- Production Stage ----
FROM alpine:latest AS prod

WORKDIR /app

# Copier uniquement le binaire compilé depuis la phase builder (sans air)
COPY --from=builder /app/api /app/api

# Exposer le port
EXPOSE 8080

# Exécuter l'API en mode production
CMD ["/app/api"]
